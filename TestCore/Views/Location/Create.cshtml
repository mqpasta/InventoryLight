@using TestCore.Helper;
@model TestCore.Models.Location

@{
    ViewData["Title"] = "New Location";
}

<h2>Locations</h2>

<h4>Add New</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Save">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @*<div class="form-group">
                    <label asp-for="LocationId" class="control-label"></label>
                    <input asp-for="LocationId" class="form-control" />
                    <span asp-validation-for="LocationId" class="text-danger"></span>
                </div>*@
            <div class="form-group">
                <label asp-for="LocationCode" class="control-label"></label>
                <input asp-for="LocationCode" class="form-control" />
                <span asp-validation-for="LocationCode" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LocationName" class="control-label"></label>
                <input asp-for="LocationName" class="form-control" />
                <span asp-validation-for="LocationName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <div class="checkbox">
                    <label>
                        <input asp-for="IsWearhouse" />
                        @Html.DisplayNameFor(model => model.IsWearhouse)
                    </label>
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
                @UIHelper.GetButton(Html, "Cancel", "Index", "Location", ButtonType.Cancel)
            </div>
        </form>
    </div>
</div>

<div>
    @UIHelper.GetButton(Html, "Back to List", "Index", "Location", ButtonType.General)
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
